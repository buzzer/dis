Präambel
--------
db2 connect to VSISP user vsisp23
db2 attach to vsisls4 user vsisp23
db2 list applications -- -> <handle>
db2 get snapshot for locks for application agentid <handle>

db2connect
Passport:6FOAC65l
db2 list applications | grep VSIS23 (die Verbindung(en) schauen)

Isolationsstufen
1)
db2 values current isolation
1 -- 1 record(s) selected

/* Wenn man CURRENT ISOLATION nicht eingestellt hat,wird das einfach
   ein leeres String zurueck gegeben sowie obige(die default isolationstufe   (CS)   wird benutzt)*/
2)
db2 "select * from opk where id = 2"
ID  	NAME
-------- ------------------------------------------
      2  Name2_b
  1 recodrd(s) selected.


3)
export DB20PTIONS="+c"
//db2 update command options using c off
db2 list command options
db2 attach to vsisls4 user vsisp23
db2 list applications


4)
//Row Lock Mode 
//NS:Next key schares

db2 set isolation = RS
//Bei der Verwendung des RS sperrt die DB2 UDB alle Datensaetze der //Ergebnismenge.
Sperrkonflikte
5)
***Zweite Verbindung:***
export DB20PTIONS ="-c"
db2 list command options
***Erste Verbindung:***
db2 "select * from opk where id > 8"

ID  NAME
--  --------
 9  Name9
10  Name10
20  Name20

3 record(s) selected

***Zweite Verbindung***
db2 "insert into opk values(11,'name11')" 
***Erste Verbindung:***
db2 "select * from opk where id > 8"
db2 commit    //da die AutoCommit in der Erste Verbindung ausgeschaltet wird.


ID  NAME
--  --------
 9  Name9
10  Name10
20  Name20
11  name11

4 record(s) selected

V1(RS)            V2(CS)
-------------------------
+c                -c
SELECT id>5
                  INSERT id>5   -> OK
SELECT id>5                     -> Neues Tupel

6)
db2 set isolation=RR
//Im Fall des Isolationstufe RR sperrt die DB2 UDB alle Datensaetze,die zur //Bestimmung der Ergebnismenge vom DBMS herangezogen werden.

/**Table lock modes
   opk
   S :Share**/
***Zweite Verbindung***
db2 "insert into opk values(12,'name12')" 
//Die zweite Verbindung muss warten,bis die erste Verbindung Commit ist.
***Erste Verbindung:***
db2 commit
***Zweite Verbindung:***
The SQL command completed successfully.
V1(RR)            V2(CS)
-------------------------
+c                -c
SELECT id>5
                  INSERT id>5   -> Blockiert (S lock on opk)
COMMIT
SELECT id>5                     -> Neues Tupel

7)
V1(RR)            V2(CS)
-------------------------
+c                -c
SELECT id=5
                  UPDATE id=1   -> Blockiert (S lock on opk)
COMMIT

8)
-- db2 svtf createTable.sql

9) on table mpk
V1(RR)            V2(CS)
-------------------------
+c                -c
SELECT id=5
                  UPDATE id=1   -> OK (S lock on Row, IS on opk)
COMMIT

Deadlocks
---------
10) on table opk
export DB2OPTIONS="+c" (Verbindung 2)

V1(RR)            V2(CS)
-------------------------
+c                +c
SELECT id=1
                  SELECT id=2
                  UPDATE id=1   -> Blockiert (V1: SIX on opk)
UPDATE id=2                     -> OK
COMMIT
                  COMMIT

Verbindung1:
IX auf Table opk

Lösung:
Verbindung2: db2 commit


11)
Verbindung2: db2 set isolation=RS
V1(RR)            V2(RS)
-------------------------
+c                +c
SELECT id=1
                  SELECT id=2
                  UPDATE id=1   -> Blockiert (V1: SIX on opk)
UPDATE id=2                     -> Rollback due Deadlock
COMMIT
                  COMMIT

-> Deadlock -> Rollback(V1)
-> V2 OK

====================
Fragen:
-'db2' Kommando funktioniert nicht via vpn! -> geklärt
- Isolationsstufen, Sperren ändern? -> geklärt
db2 set isolation=<CS>
